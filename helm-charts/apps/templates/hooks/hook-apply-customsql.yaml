{{- include "sch.config.init" (list . "apps.sch.chart.config.values") -}}
---
###############################################################################
# Â© Merative US L.P. 2022,2025
# Copyright 2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . "apply-customsql") }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "sch.metadata.labels.standard" (list . "apply-customsql-hook") | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        {{- include "sch.metadata.labels.standard" (list . "apply-customsql-hook") | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- include "sch.security.securityContext" (list . .sch.chart.podSecurityContext) | nindent 6 }}
      affinity:
        {{- include "sch.affinity.nodeAffinity" (list . .sch.chart.nodeAffinity) | nindent 8 }}
      serviceAccountName: {{ default (include "sch.names.fullCompName" (list . "secret-manager")) .Values.hookServiceAccountName }}
      {{- if or .Values.global.imagePullSecret.secretName .Values.global.imagePullSecret.username }}
      imagePullSecrets:
        - name: {{ default (printf "%s-hook-pullsecret" .Release.Name) .Values.global.imagePullSecret.secretName }}
      {{- end }}
      volumes:
        - name: customsql-files
          configMap:
            name: {{ include "sch.names.fullCompName" (list . "hook-customsql") }}
        - name: bootstrap-file
          configMap:
            name: {{ include "sch.names.fullCompName" (list . "hook-bootstrap") }}
      {{- if and (eq (.Values.global.database.type | upper) "DB2") .Values.global.database.ssl.enabled .Values.global.database.ssl.secretName }}
        - name: keystore-volume
          emptyDir: {}
        - name: db2-cert
          secret:
            secretName: {{ .Values.global.database.ssl.secretName }}
      initContainers:
        - name: import-db2-cert
          {{- include "utilities.definition" $ | indent 10 }}
          env:
            - name: certfile
              value: /mnt/certificates/{{ .Values.global.database.ssl.secretKey }}
            - name: keystore_jks
              value: /mnt/keystores/db2TrustStore.jks
          command:
            - /bin/sh
            - -c
            - keytool -import -trustcacerts -noprompt -file $certfile -keystore $keystore_jks -storepass changeit -storetype jks
          volumeMounts:
            - name: keystore-volume
              mountPath: /mnt/keystores
            - name: db2-cert
              mountPath: /mnt/certificates
      {{- end }}
      containers:
        - name: apply-customsql
          {{- include "customSQL.definition" . | indent 10 }}
          imagePullPolicy: {{ .Values.global.images.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ default (include "sch.names.fullCompName" (list . "hook-dbcreds")) .Values.global.database.credsSecretName }}
          env:
            - name: ANT_OPTS
              value: "-Djava.extra.jvmargs=\"-Dcuram.db.username=$SPM_DB_USR -Dcuram.db.password=$SPM_DB_PSW\""
          args:
            - -f
            - /opt/ibm/Curam/release/CuramSDEJ/util/loadsql.xml
            - -Dsql.resource=/mnt/customsql/
          volumeMounts:
            - name: customsql-files
              mountPath: /mnt/customsql
            - name: bootstrap-file
              mountPath: /opt/ibm/Curam/release/project/properties/Bootstrap.properties
              subPath: Bootstrap.properties
            {{- if and (eq (.Values.global.database.type | upper) "DB2") .Values.global.database.ssl.enabled .Values.global.database.ssl.secretName }}
            - name: keystore-volume
              mountPath: /mnt/keystores
            {{- end }}
