###############################################################################
# Â© Merative US L.P. 2022,2025
# Copyright 2019,2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

# Default values for fat-spm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  images:
    registry: &imageRegistry minikube.local:5000
    imageLibrary: ''
    imagePrefix: ''
    imageTag: latest
    pullPolicy: Always
  imagePullSecret:
    secretName: ''
    username: ''
  timezone: 'UTC'
  sch:
    enabled: true
  database:
    ## Database connection properties
    type: DB2
    dbName: DATABASE
    hostname: ''
    port: 50000
    username: db2admin
    # Name of pre-created secret containing database credentals
    credsSecretName: ''
    # The XOR-encrypted DB User's password injected into Liberty configuration - see Liberty/bin/securityUtility to encrypt your value
    wlp_psw: "{xor}Oz1tPjsyNjE="
    # The SPM-encrypted password injected into Bootstrap.properties
    spm_psw: "5itAmT5UzH7wR6kvkYqkTw=="
    # Oracle Service name, where applicable
    serviceName: ''
    ssl:
      enabled: false
      # Name of the secret containing the database TLS certificate
      secretName: ''
      # Key in the above secret with the certificate
      secretKey: db2admin.arm
  apps:
    common:
      persistence:
        ## Persistence volume to store data (such as non-log files)
        enabled: false
        ## If enabled, connects to a persistence storage service
        # credentials:
        #   azurestorageaccountname: "AccountName (encoded in Base64)"
        #   azurestorageaccountkey: "AccountKey (encoded in Base64)"
        # storageClassName: "azureblob-fuse-premium"
        # storageCapacity: "10Gi"
        # properties:
        #   azureFile:
        #     secretName: "spm-persistence-secret"
        #     shareName: "file-share-smb"
        #     readOnly: false
        mountPoint: ''
        jmxstats:
          enabled: false

# Name of an existing ServiceAccount for running the Batch programs
serviceAccountName: ""

# Default Java Options for batch jobs
javaOptions: ' -Xms728m -Xmx728m'

# Default Max JVM memmory 
maxMemory: '1024m'

# Resource limits for Batch jobs (can be overridden per job)
resources:
  limits:
    cpu: "1"
    memory: "2Gi"
  requests:
    cpu: "0.5"
    memory: "1Gi"

# Number of successful job executions to keep (can be overridden per job)
successfulJobsHistoryLimit: 3

# Number of attempts to run a batch job, in case of failure (can be overridden per job)
backoffLimit: 1

# Specifies how to treat concurrent executions of a Job (can be overridden per job)
# Valid values are:
# - "Allow": allows CronJobs to run concurrently
# - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet
# - "Replace": cancels currently running job and replaces it with a new one
concurrencyPolicy: Forbid

programs:
  queued:
    schedule: "*/30 * * * *"
  # Call specific batch programs with specific parameters, where relevant
  # reassessment:
  #   schedule: "0 2 * * 6"
  #   className: curam.healthcare.sl.intf.BulkICReassessment.process
  #   parameters: "evidenceMigrationDetails=CASE|DET0026071;DET0026027|CT26301"
  #   username: superuser

streamed: {}
  # Schedule streamed jobs using a similar syntax as standalone Batch
  # pd_eligibility:
  #   schedule: "0 1 * * *"
  #   chunker:
  #     className: curam.core.intf.DetermineProductDeliveryEligibility.process
  #     parameters: processingDate=20201013
  #     replicaCount: 1
  #   stream:
  #     className: curam.core.intf.DetermineProductDeliveryEligibilityStream.process
  #     replicaCount: 3
  #     javaOptions: '-Xms2g -Xmx2g'
  #     resources:
  #       limits:
  #         cpu: "2"
  #         memory: "4Gi"
  #       requests:
  #         cpu: "1"
  #         memory: "2.5Gi"

# Settings for node affinty, will give an affinity preference of
# weight 100 for nodes labelled as worker-type:application
affinityKey: worker-type
affinityValue: application
# JMX Exporter configuration (Beta Feature)
jmxExporter:
  enabled: false
  port: 8080
  configYaml: ''