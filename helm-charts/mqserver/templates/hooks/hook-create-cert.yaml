{{- if not .Values.global.mq.tlsSecretName }}
{{- include "sch.config.init" (list . "mqserver.sch.chart.config.values") -}}
---
###############################################################################
# Â© Merative US L.P. 2025
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

apiVersion: batch/v1
kind: Job
metadata:
  name: create-mq-cert-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ default (include "sch.names.fullCompName" (list . "secret-manager")) .Values.hookServiceAccountName }}
      containers:
        - name: cert-generator
          image: registry.access.redhat.com/ubi8/ubi
          volumeMounts:
            - name: cert-config
              mountPath: /etc/ssl-config
          command:
            - /bin/bash
            - -c
            - |
              set -e

              dnf install -y openssl curl

              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

              COMMON_NAME="{{ .Release.Name }}-mqserver"
              SECRET_NAME="{{ .Release.Name }}-mq-secret"
              CONFIG_FILE="/etc/ssl-config/cert-config.cnf"

              openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                -keyout /tmp/tls.key -out /tmp/tls.crt -config $CONFIG_FILE

              kubectl create secret tls ${SECRET_NAME} --cert=/tmp/tls.crt --key=/tmp/tls.key -n {{ .Release.Namespace }}

      volumes:
        - name: cert-config
          configMap:
            name: mq-cert-config-{{ .Release.Name }}
{{- end }}
