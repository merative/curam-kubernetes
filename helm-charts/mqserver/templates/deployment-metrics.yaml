{{- if and ($.Values.global.mq.metrics.enabled) ($.Values.global.mq.metrics.additionalMetrics) }}
{{- include "sch.config.init" (list . "mqserver.sch.chart.config.values") -}}
{{ $apps := .Values.global.apps.config }}
{{- range $name, $app := $apps }}
{{- if and ($app.enabled) (not (hasKey $app "mqConnectionNameList")) }}
---
###############################################################################
# Â© Merative US L.P. 2022,2025
# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sch.names.fullCompName" (list $ (printf "%s-metrics" $name)) }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "sch.metadata.labels.standard" (list $ (printf "%s-metrics" $name)) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sch.metadata.labels.standard" (list $ (printf "%s-metrics" $name)) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sch.metadata.labels.standard" (list $ (printf "%s-metrics" $name)) | nindent 8 }}
        app: {{ include "sch.names.fullCompName" (list $ $name) }}-metrics
        version: v{{ $.Release.Revision }}
      annotations:
        {{- include "sch.metadata.annotations.metering" (list $ $.sch.chart.metering) | nindent 8 }}
        {{- with $.Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        prometheus.io/path: /metrics
        prometheus.io/port: "9157"
        prometheus.io/scrape: "true"
    spec:
      {{- include "sch.security.securityContext" (list $ $.sch.chart.podSecurityContext) | nindent 6 }}
      affinity:
        {{- include "sch.affinity.nodeAffinity" (list $ $.sch.chart.nodeAffinity) | nindent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - mqserver
              topologyKey: topology.kubernetes.io/zone
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - mqserver
              topologyKey: kubernetes.io/hostname
      restartPolicy: {{ .restartPolicy | default "Always" }}
      containers:
        - name: {{ $.Chart.Name }}-mq-metric-prometheus
          image: {{ include "mqMetrics.imageFullName" $ }}
          envFrom:
          - configMapRef:
              name: {{ include "sch.names.fullCompName" (list $ "metrics-cm") }}
          env:
            - name: IBMMQ_CONNECTION_USER
              value: "admin"
            - name: IBMMQ_CONNECTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-mq-credentials" $.Release.Name) $.Values.global.mq.queueManager.secret.name }}
                  key: {{ $.Values.global.mq.queueManager.secret.adminPasswordKey }}
            - name: IBMMQ_CONNECTION_CONNNAME
            {{- if ($.Capabilities.APIVersions.Has "mq.ibm.com/v1beta1") }}
              value: {{ printf "%s-mqserver-%s-ibm-mq(1414)" $.Release.Name $name }}
            {{- else }}
              value: {{ printf "%s(1414)" (include "sch.names.fullCompName" (list $ $name)) }}
            {{- end }}
          ports:
            - name: client
              containerPort: 9157
              protocol: TCP
          # Set liveness probe to determine if the queue manager is running
          livenessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ $.Values.livenessProbe.failureThreshold }}
          # Set readiness probe to determine if the MQ listener is running
          readinessProbe:
            httpGet:
              path: /metrics
              port: client
              scheme: HTTP
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
          # Set security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            privileged: false
            capabilities:
              drop:
                - ALL
          {{- with $.Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        {{- if not (hasKey $app "mqConnectionNameList") }}
        - name: wait-for-mq
          {{- include "mqutilities.definition" $ | nindent 10 }}
          command:
            - /bin/sh
            - -c
            {{- if ($.Capabilities.APIVersions.Has "mq.ibm.com/v1beta1") }}
            - >
              until nc -z -w3 {{ $.Release.Name }}-mqserver-{{ $name }}-ibm-mq 1414; do
                echo waiting for {{ $.Release.Name }}-mqserver-{{ $name }}-ibm-mq:1414 to be reachable;
                sleep 2;
              done;
            {{- else }}
            - >
              until nc -z -w3 {{ $.Release.Name }}-mqserver-{{ $name }} 1414; do
                echo waiting for {{ $.Release.Name }}-mqserver-{{ $name }}:1414 to be reachable;
                sleep 2;
              done;
            {{- end }}
        {{- end }}
      {{- if or $.Values.global.imagePullSecret.secretName $.Values.global.imagePullSecret.username }}
      imagePullSecrets:
        - name: {{ default (printf "%s-pull-secret" $.Release.Name) $.Values.global.imagePullSecret.secretName }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
