"use strict";(self.webpackChunkcuram_kubernetes=self.webpackChunkcuram_kubernetes||[]).push([[7177],{2531:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return i},default:function(){return h}});var n=t(45),r=(t(6540),t(5680)),o=t(4330);const s=["components"],i={},l=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",a)},p=l("InlineNotification"),m=l("Tabs"),d=l("Tab"),u=l("Row"),c=l("Column"),y={_frontmatter:i},b=o.A;function h(e){let{components:a}=e,t=(0,n.A)(e,s);return(0,r.yg)(b,Object.assign({},y,t,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h2",null,(0,r.yg)("img",{parentName:"h2",src:"https://img.shields.io/badge/-C%C3%BAram_8.0.0.0-green",alt:"Cúram 8.0.0.0"})," Support for Liberty persistent timers"),(0,r.yg)("p",null,"Liberty persistent timers are configured by default to support the Cúram timer infrastructure."),(0,r.yg)("p",null,"For more information about Cúram timer infrastructure, see the ",(0,r.yg)("em",{parentName:"p"},"Cúram Server Developer’s Guide"),"."),(0,r.yg)(p,{mdxType:"InlineNotification"},(0,r.yg)("p",null,"Cúram PDF documentation is available to download from ",(0,r.yg)("a",{parentName:"p",href:"https://curam-spm-devops.github.io/wh-support-docs/spm/pdf-documentation/"},"Cúram Support Docs"),".")),(0,r.yg)("p",null,"This configuration takes advantage of the Liberty capability, provided by release 20.0.0.1, to share a set of timer database tables across Liberty servers, which in our case run in Kubernetes pods."),(0,r.yg)("p",null,"Sharing database timer tables avoids the issue where automatic creation of timer tables that occurs at each and every server/pod start could pose a database limit risk.\nConsider a typical Cúram deployment of Curam, Rest, CitizenPortal, and Web Service applications with consumer and producer pods and three replicas.\nOn initial start that deployment would create 72 database tables.\nIt’s not hard to imagine the many hundreds or thousands of tables that could be created over time as replicas are scaled up, pods restarted, and so forth."),(0,r.yg)("p",null,"The sharing of timer tables immediately reduces the number of timer tables required to a much more manageable number and, more importantly, keeps the number of tables bounded. This is achieved by grouping deployments into pod types.\nFor instance, one set of timer tables for all ",(0,r.yg)("inlineCode",{parentName:"p"},"apps-curam-producer")," pods (one pod type), similarly for all ",(0,r.yg)("inlineCode",{parentName:"p"},"apps-curam-consumer")," pods (another pod type), for all ",(0,r.yg)("inlineCode",{parentName:"p"},"apps-rest-producer")," pods (another pod type), and so forth.\nThus, based on one set of tables per pod type the above example deployment requiring 72 tables is now fixed at 24 tables, regardless of how many replicas are started.\nThe pod type is derived at deployment time and exposed as an environment variable, which is read by the Liberty configuration: ",(0,r.yg)("inlineCode",{parentName:"p"},"${env.POD_TIMER_TYPE}"),"."),(0,r.yg)("p",null,"The out-of-the-box configuration of Liberty persistent timers should be adequate for most use cases.\nHowever, Helm Chart overrides are available for the most relevant Liberty settings that can be used to adjust behavior or performance depending upon your application, environment, etc.\nFor more information see the ",(0,r.yg)("a",{parentName:"p",href:"/curam-kubernetes/deployment/config-reference#liberty-runtime"},"Configuration Reference")," and the ",(0,r.yg)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/was-liberty/base?topic=applications-configuring-enterprise-javabeans-timer-service-persistent-timers"},"WebSphere Liberty documentation"),"."),(0,r.yg)("h3",null,"Migrating from Cúram V7 to V8"),(0,r.yg)("p",null,"If you are migrating to Cúram V8 you may cleanup the obsolete timer tables in your database.\nTo do this you need to be aware of how the timer tables were named previously.",(0,r.yg)("br",{parentName:"p"}),"\n","Being created uniquely for each pod means that the tables were named based on the pod name.\nThat is, the table names included the replicaset unique identifier (UUID), which is no longer used.\nFor example, a pod named ",(0,r.yg)("inlineCode",{parentName:"p"},"release-apps-curam-producer-76c8464b4d-9tzlx")," would have mapped to a table name of  ",(0,r.yg)("inlineCode",{parentName:"p"},"EJBTIMER_RELEASE_APPS_CURAM_CONSUMER_76C8464B4D_9TZLX_PART"),", which now maps to ",(0,r.yg)("inlineCode",{parentName:"p"},"EJBTIMER_RELEASE_APPS_CURAM_CONSUMER_PART"),", etc."),(0,r.yg)("p",null,"Since the old naming is no longer used those timer tables are obsolete once you migrate to Cúram V8 and the tables can safefly be removed.\nIn cleaning up obsolete tables you need to be careful to only identify obsolete tables.\nThe following SQL will generate ",(0,r.yg)("inlineCode",{parentName:"p"},"DROP")," DDL statements that map specifically to the old table naming:"),(0,r.yg)(m,{mdxType:"Tabs"},(0,r.yg)(d,{label:"Db2",mdxType:"Tab"},(0,r.yg)(u,{mdxType:"Row"},(0,r.yg)(c,{mdxType:"Column"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"select concat('drop table ',strip(tabname)) from syscat.tables where tabname like 'EJBTIMER_%_APPS_%_%_%_%'\n"))))),(0,r.yg)(d,{label:"Db2 for z/OS",mdxType:"Tab"},(0,r.yg)(u,{mdxType:"Row"},(0,r.yg)(c,{mdxType:"Column"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"select concat('drop table ',strip(name))  || ';' from sysibm.systables where name like 'EJBTIMER_%_APPS_%_%_%_%';\n"))))),(0,r.yg)(d,{label:"Oracle",mdxType:"Tab"},(0,r.yg)(u,{mdxType:"Row"},(0,r.yg)(c,{mdxType:"Column"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"select 'DROP TABLE ' || OWNER || '.' || TABLE_NAME || ';' from SYS.ALL_TABLES  where TABLE_NAME LIKE 'EJBTIMER_%_APPS_%_%_%_%';\n")))))),(0,r.yg)("p",null,"Before executing the ",(0,r.yg)("inlineCode",{parentName:"p"},"DROP")," statements ensure that none of the pods identified by the table names are running."))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-supporting-infrastructure-persistent-timers-mdx-af5a3252e82d46304920.js.map