{"version":3,"file":"component---src-pages-architecture-eks-consideration-networking-mdx-63699079d8c772c5698f.js","mappings":"0QAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAImB,qBAJX,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,IAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,IAACE,EAASO,OAAAC,OAAA,GAAKT,EAAiBJ,EAAK,CAAES,WAAYA,EAAYK,QAAQ,eAG5EX,EAAAA,EAAAA,IAACL,EAAkB,CAACiB,KAAK,UAAUD,QAAQ,uBACzCX,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,UAAQa,WAAW,KAAK,SAAkB,kGAE/Cb,EAAAA,EAAAA,IAAA,UAAK,eACLA,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,KAAGa,WAAW,IACb,KAAQ,wEACN,oBAAwB,qGACFb,EAAAA,EAAAA,IAAA,KAAGa,WAAW,IACtC,KAAQ,4EACN,+BAAmC,MAAKb,EAAAA,EAAAA,IAAA,KAAGa,WAAW,IACxD,KAAQ,qEACN,WAAe,SAAQb,EAAAA,EAAAA,IAAA,KAAGa,WAAW,IACvC,KAAQ,sFACN,iCAAqC,MAC3Cb,EAAAA,EAAAA,IAAA,SAAI,8JAGR,CAEAI,EAAWU,gBAAiB,C","sources":["webpack://curam-kubernetes/./src/pages/architecture/eks-consideration/networking.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/curam-kubernetes/curam-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` Amazon Elastic Kubernetes Service (EKS) is intended for Development and Test purposes only.`}</p>\n    </InlineNotification>\n    <h2>{`Networking`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/eks/latest/userguide/eks-networking.html\"\n      }}>{`Network Policies`}</a>{` in Kubernetes in EKS are used to determine object communication.\nThey can be implemented using `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/eks/latest/userguide/cni-network-policy.html\"\n      }}>{`Kubernetes network policies`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html\"\n      }}>{`Ingress`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/eks/latest/userguide/cni-network-policy-configure.html\"\n      }}>{`Restrict traffic between pods`}</a>{`.`}</p>\n    <p>{`Ingress works by exposing services internal to the cluster via external endpoints. Traffic routing is controlled by rules defined on the Ingress resource.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineNotification","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","kind","parentName","isMDXComponent"],"sourceRoot":""}