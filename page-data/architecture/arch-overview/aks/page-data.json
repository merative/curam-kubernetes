{"componentChunkName":"component---src-pages-architecture-arch-overview-aks-mdx","path":"/architecture/arch-overview/aks/","result":{"pageContext":{"frontmatter":{"title":"Cúram AKS Reference Architecture","description":"Cúram architecture on AKS","tabs":["Architecture Overview","OpenShift","AKS","EKS","Dev Workstation","Static Content"]},"relativePagePath":"/architecture/arch-overview/aks.mdx","titleType":"page","MdxNode":{"id":"51dbe73b-377d-55ba-a46e-e725970ff1b8","children":[],"parent":"6eebc2a0-e140-5063-baaa-288767898d23","internal":{"content":"---\ntitle: Cúram AKS Reference Architecture\ndescription: Cúram architecture on AKS\ntabs: ['Architecture Overview','OpenShift','AKS','EKS','Dev Workstation','Static Content']\n---\n\n## Cúram Azure Kubernetes Service Cluster - Reference Architecture\n\nThis section provides an overview of the recommended deployment architecture for Cúram on Azure Kubernetes Service (AKS). The architecture is designed to maximize flexibility, elasticity, efficiency, and the strategic benefits of cloud-native platforms.\n\n<InlineNotification kind=\"info\">\n  <div style={{ fontSize: \"0.8em\" }}>\n    <div style={{ margin: \"0.8em 0\" }}>\n      • <strong>Azure Kubernetes Service (AKS)</strong> is supported for <strong>Development</strong> and <strong>Test</strong> environments for both <strong>Java 8</strong> and <strong>Java 21</strong>.\n    </div>\n    <div style={{ margin: \"0.8em 0\" }}>\n      • <strong>Azure Kubernetes Service (AKS)</strong> is supported for <strong>Production</strong> use with <strong>Java 21</strong> only.\n    </div>\n  </div>\n</InlineNotification>\n\n![Cúram on Kubernetes - AKS Reference Architecture](../../../images/curam-reference-arch-kube.png)\n<Caption>\n*Figure 1:* Cúram on Kubernetes - Deployment Architecture\n</Caption>\n\n- Cúram is deployed on WebSphere Liberty, a lightweight Java EE application server designed for cloud-native platforms.\n- Each Cúram EAR file is deployed in a dedicated Liberty instance, enabling independent scaling and fault isolation.\n- Liberty instances are built using Cúram-provided Dockerfiles and deployed as containers within Kubernetes pods.\n- Batch and XML Server components are also packaged as Docker images and deployed as containers, with resource requirements defined per workload.\n- The database tier must be deployed on bare metal or virtual machines; managed cloud database services are not officially supported unless explicitly documented.\n- JMS messaging is provided by IBM MQ, which is deployed and managed outside the Kubernetes cluster (on a VM) using Helm charts.\n  - Only IBM MQ Long Term Support (LTS) releases are supported for deployment on bare metal and VMs to ensure stability and vendor support.\n- To minimize latency and maximize performance, deploy the database and queue manager tiers in the same network zone or region as the application tier.\n","type":"Mdx","contentDigest":"46bcbe60270b9196a7da3a07768d4a4e","owner":"gatsby-plugin-mdx","counter":208},"frontmatter":{"title":"Cúram AKS Reference Architecture","description":"Cúram architecture on AKS","tabs":["Architecture Overview","OpenShift","AKS","EKS","Dev Workstation","Static Content"]},"exports":{},"rawBody":"---\ntitle: Cúram AKS Reference Architecture\ndescription: Cúram architecture on AKS\ntabs: ['Architecture Overview','OpenShift','AKS','EKS','Dev Workstation','Static Content']\n---\n\n## Cúram Azure Kubernetes Service Cluster - Reference Architecture\n\nThis section provides an overview of the recommended deployment architecture for Cúram on Azure Kubernetes Service (AKS). The architecture is designed to maximize flexibility, elasticity, efficiency, and the strategic benefits of cloud-native platforms.\n\n<InlineNotification kind=\"info\">\n  <div style={{ fontSize: \"0.8em\" }}>\n    <div style={{ margin: \"0.8em 0\" }}>\n      • <strong>Azure Kubernetes Service (AKS)</strong> is supported for <strong>Development</strong> and <strong>Test</strong> environments for both <strong>Java 8</strong> and <strong>Java 21</strong>.\n    </div>\n    <div style={{ margin: \"0.8em 0\" }}>\n      • <strong>Azure Kubernetes Service (AKS)</strong> is supported for <strong>Production</strong> use with <strong>Java 21</strong> only.\n    </div>\n  </div>\n</InlineNotification>\n\n![Cúram on Kubernetes - AKS Reference Architecture](../../../images/curam-reference-arch-kube.png)\n<Caption>\n*Figure 1:* Cúram on Kubernetes - Deployment Architecture\n</Caption>\n\n- Cúram is deployed on WebSphere Liberty, a lightweight Java EE application server designed for cloud-native platforms.\n- Each Cúram EAR file is deployed in a dedicated Liberty instance, enabling independent scaling and fault isolation.\n- Liberty instances are built using Cúram-provided Dockerfiles and deployed as containers within Kubernetes pods.\n- Batch and XML Server components are also packaged as Docker images and deployed as containers, with resource requirements defined per workload.\n- The database tier must be deployed on bare metal or virtual machines; managed cloud database services are not officially supported unless explicitly documented.\n- JMS messaging is provided by IBM MQ, which is deployed and managed outside the Kubernetes cluster (on a VM) using Helm charts.\n  - Only IBM MQ Long Term Support (LTS) releases are supported for deployment on bare metal and VMs to ensure stability and vendor support.\n- To minimize latency and maximize performance, deploy the database and queue manager tiers in the same network zone or region as the application tier.\n","fileAbsolutePath":"/home/runner/work/curam-kubernetes/curam-kubernetes/src/pages/architecture/arch-overview/aks.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","56986546","768070550"]}