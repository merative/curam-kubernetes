{"componentChunkName":"component---src-pages-architecture-arch-overview-dev-workstation-mdx","path":"/architecture/arch-overview/dev-workstation/","result":{"pageContext":{"frontmatter":{"title":"Dev Workstation","description":"Dev Workstation","tabs":["Architecture Overview","OpenShift","AKS","EKS","Dev Workstation","Static Content"]},"relativePagePath":"/architecture/arch-overview/dev-workstation.mdx","titleType":"page","MdxNode":{"id":"b5ab6fdd-a7fd-5096-8453-12afe996e93f","children":[],"parent":"2836f1b3-5311-5da7-86d9-643b14bea1a0","internal":{"content":"---\ntitle: Dev Workstation\ndescription: Dev Workstation\ntabs: ['Architecture Overview','OpenShift','AKS','EKS','Dev Workstation','Static Content']\n---\n\nThis runbook is intended for first-time users of Helm, Minikube, and Kubernetes who want to deploy Cúram in a local development environment.\n\nMinikube is a lightweight Kubernetes implementation that runs a single-node cluster inside a virtual machine (VM) on your laptop. This setup provides a minimal architecture to help you become familiar with the main artifacts needed to run Cúram on Kubernetes.\n\n### Development Workstation Architecture\n\nFigure 1 shows the example architecture:\n\n![Development Workstation Architecture](../../../images/dev_workstation_architecture.png)\n<Caption>\n*Figure 1:* Example dev workstation architecture\n</Caption>\n\nThe architecture consists of a Kubernetes environment (within a VM) containing the following components:\n\n- An IBM® WebSphere® Liberty-based pod that contains the Cúram EAR file.\n- A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in Cúram.\n- A pod that contains the XML server.\n- A pod that runs batch processes.\n\nThis environment connects to an external IBM Db2 or Oracle database.\n\nFor a Kubernetes cluster in a development environment this runbook uses [Minikube](/prereq/kubernetes/minikube).\nMinikube can easily run on a developer computer, which is convenient for describing the application flow.\n[CodeReady Containers](/prereq/openshift/codeready-containers) (CRC) can also be used to run a Kubernetes environment in a development environment.\n\n### Development Workflow\n\nFigure 2 outlines the development workflow:\n\n- Create a build and deployment environment for Cúram.\n- Build Cúram for deployment on Kubernetes using Minikube or CRC.\n- Create Docker® images for Cúram.\n- Deploy Cúram Docker images to Kubernetes on Minikube or CRC.\n- Troubleshoot Cúram when deployed in Kubernetes.\n\n![Process summary](../../../images/summary_process.png)\n<Caption>\n*Figure 2:* Process summary\n</Caption>\n\n<InlineNotification>\n**Note:** The implementation of Cúram that is described in this runbook uses only the following .ear files:\n- Curam.ear\n- CuramServerCode.ear\n\nThe scripts can be easily extended to include the other Cúram applications, such as Rest or Citizen Portal.\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n- Steps to build the Cúram containers and run Minikube or CRC are performed on a Red Hat or macOS development machine.\n- Steps related to [Building the Cúram application](/deploy-curam/build-curam) can be executed on a separate machine.\n- You have basic knowledge of the Linux command line for navigating folders.\n","type":"Mdx","contentDigest":"8c092cf4378e5d4c883687d8cab417e9","owner":"gatsby-plugin-mdx","counter":210},"frontmatter":{"title":"Dev Workstation","description":"Dev Workstation","tabs":["Architecture Overview","OpenShift","AKS","EKS","Dev Workstation","Static Content"]},"exports":{},"rawBody":"---\ntitle: Dev Workstation\ndescription: Dev Workstation\ntabs: ['Architecture Overview','OpenShift','AKS','EKS','Dev Workstation','Static Content']\n---\n\nThis runbook is intended for first-time users of Helm, Minikube, and Kubernetes who want to deploy Cúram in a local development environment.\n\nMinikube is a lightweight Kubernetes implementation that runs a single-node cluster inside a virtual machine (VM) on your laptop. This setup provides a minimal architecture to help you become familiar with the main artifacts needed to run Cúram on Kubernetes.\n\n### Development Workstation Architecture\n\nFigure 1 shows the example architecture:\n\n![Development Workstation Architecture](../../../images/dev_workstation_architecture.png)\n<Caption>\n*Figure 1:* Example dev workstation architecture\n</Caption>\n\nThe architecture consists of a Kubernetes environment (within a VM) containing the following components:\n\n- An IBM® WebSphere® Liberty-based pod that contains the Cúram EAR file.\n- A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in Cúram.\n- A pod that contains the XML server.\n- A pod that runs batch processes.\n\nThis environment connects to an external IBM Db2 or Oracle database.\n\nFor a Kubernetes cluster in a development environment this runbook uses [Minikube](/prereq/kubernetes/minikube).\nMinikube can easily run on a developer computer, which is convenient for describing the application flow.\n[CodeReady Containers](/prereq/openshift/codeready-containers) (CRC) can also be used to run a Kubernetes environment in a development environment.\n\n### Development Workflow\n\nFigure 2 outlines the development workflow:\n\n- Create a build and deployment environment for Cúram.\n- Build Cúram for deployment on Kubernetes using Minikube or CRC.\n- Create Docker® images for Cúram.\n- Deploy Cúram Docker images to Kubernetes on Minikube or CRC.\n- Troubleshoot Cúram when deployed in Kubernetes.\n\n![Process summary](../../../images/summary_process.png)\n<Caption>\n*Figure 2:* Process summary\n</Caption>\n\n<InlineNotification>\n**Note:** The implementation of Cúram that is described in this runbook uses only the following .ear files:\n- Curam.ear\n- CuramServerCode.ear\n\nThe scripts can be easily extended to include the other Cúram applications, such as Rest or Citizen Portal.\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n- Steps to build the Cúram containers and run Minikube or CRC are performed on a Red Hat or macOS development machine.\n- Steps related to [Building the Cúram application](/deploy-curam/build-curam) can be executed on a separate machine.\n- You have basic knowledge of the Linux command line for navigating folders.\n","fileAbsolutePath":"/home/runner/work/curam-kubernetes/curam-kubernetes/src/pages/architecture/arch-overview/dev-workstation.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","56986546","768070550"]}